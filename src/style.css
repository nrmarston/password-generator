:root {
  --black: #111210;
  --input-bg: #212220;
  --input-hover: #282a27;
  --input-pressed: #2f312e;
  --text: #eceeec;
  --text-muted: #afb5ad;
  --accent: #bdee63;
  --accent-hover: #d4ff70;
  --accent-pressed: #bde56c;
  --pink: magenta;
  --outline-color: #b6fd6d6c;
  --tomato: #e54d2e;
  --amber: #ffc53d;
  --numbers: #70b8ff;
  --symbols: #ffa057;

  --radius-small: 4px;
  --radius-large: 8px;
}

/* Added styles for password display characters */
#password-output {
  max-width: 100%;
  display: flex;
  align-items: center;
  gap: 0.15ch;
  margin-block: 1.5rem;
  padding: 0.625rem 1.25rem;
  padding-right: 4rem;
  min-height: 2.5rem;
  font-size: 1.25rem;
  font-weight: 500;
  background: linear-gradient(to right, var(--input-bg) 90%, transparent 100%);
  position: relative;
  z-index: 0;
}

.char {
  display: inline-block;
}

.char.letter {
  color: var(--text);
}

.char.number {
  color: var(--numbers);
}

.char.symbol {
  color: var(--symbols);
}

* {
  border: none;
  padding: 0px;
  margin: 0px;
}

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  background-color: var(--black);
  color: var(--text);
  font-size: 100%;
  font-family:
    Seravek, 'Gill Sans Nova', Ubuntu, Calibri, 'DejaVu Sans', source-sans-pro,
    sans-serif;
  font-weight: normal;

  accent-color: var(--accent);
}

h1 {
  font-size: 2.1875rem;
  line-height: 1.1428571429;
  letter-spacing: -0.01em;
}

button {
  transition:
    color 150ms cubic-bezier(0.645, 0.045, 0.355, 1),
    background-color 150ms cubic-bezier(0.645, 0.045, 0.355, 1);
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

button:focus-visible {
  outline: 3px solid var(--outline-color);
  outline-offset: 3px;
}

button:disabled,
button.is-disabled {
  opacity: 0.5;
  pointer-events: none;
  cursor: not-allowed;
}

.page-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100vh;
  border-radius: 4px;
}

form {
  width: 100%;
  max-width: min(90vw, 40ch);
  max-block-size: min(80vh, 100%);
  max-block-size: min(80dvb, 100%);
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: stretch;
}

input {
  outline: none;
}

input:focus-visible {
  outline: 2px solid var(--outline-color);
}

.password-display {
  display: flex;
  flex-direction: column;
  justify-content: stretch;
  position: relative;
  overflow: hidden;
}

#password {
  margin-block: 1.5rem;
  background-color: var(--input-bg);
  color: var(--text);
  padding: 0.625rem 1.25rem;
  min-height: 2.5rem;
  flex-grow: 1;
  font-size: 1.25rem;
  font-weight: 700;
  overflow-x: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  border-radius: var(--radius-small);
  pointer-events: none;
  user-select: none;
  caret-color: transparent;
}

#copy-btn {
  position: absolute;
  line-height: 1;
  gap: 0.25rem;
  border-radius: 2px;
  right: 0.5rem;
  top: 50%;
  transform: translateY(-50%);
  padding: 0.625rem;
  cursor: pointer;
  background-color: var(--input-bg);
  color: var(--accent);
  transition:
    color 150ms ease-out,
    background-color 150ms ease-out;
  pointer-events: auto;
}

#copy-btn svg,
#generate-btn svg {
  width: 1.25em;
  height: 1.25em;
}

#copy-btn.is-copied {
  background-color: var(--accent);
  color: var(--black);
}

.controls-wrap {
  padding: 1rem;
  background-color: var(--input-bg);
  border-radius: var(--radius-small);
}

.length-control label {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 1.125rem;
}

#length {
  width: 100%;
  margin-block: 1.5rem;
}

#length-value {
  color: var(--accent);
  font-size: 1.75rem;
}

.options-group {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: start;
  gap: 1rem;
  margin-top: 2rem;
}

.options-group label {
  display: flex;
  justify-content: center;
  align-content: center;
  gap: 0.75rem;
  cursor: pointer;
  font-size: 1.125rem;
  line-height: 1;
}

input[type='checkbox'] {
  inline-size: 1.125rem; /* increase width */
  block-size: 1.125rem; /* increase height */
  outline-offset: 5px; /* focus style enhancement */
  accent-color: var(--accent); /* tint the input */
  position: relative; /* prepare for an absolute pseudo element */
  transform-style: preserve-3d; /* create a 3d z-space stacking context */
  margin: 0;
  cursor: pointer;
}

input[type='checkbox']::before {
  --thumb-scale: 0.05; /* initial scale of highlight */
  --thumb-highlight-size: 2rem;

  content: '';
  inline-size: var(--thumb-highlight-size);
  block-size: var(--thumb-highlight-size);
  clip-path: circle(50%); /* circle shape */
  position: absolute; /* this is why position relative on parent */
  top: 50%; /* pop and plop technique (https://web.dev/centering-in-css#5-pop-and-plop) */
  left: 50%;
  background: var(--input-pressed);
  transform-origin: center center; /* goal is a centered scaling circle */
  transform:                                  /* order here matters!! */ translateX(
      -50%
    )
    /* counter balances left: 50% */ translateY(-50%)
    /* counter balances top: 50% */ translateZ(-1px)
    /* PUTS IT BEHIND THE CHECKBOX */ scale(var(--thumb-scale))
    /* value we toggle for animation */;
  will-change: transform;
  transition: transform 0.2s ease;
}

/* on hover, set scale custom property to "in" state */
input[type='checkbox']:hover::before {
  --thumb-scale: 1;
}

input[type='checkbox']:focus-visible {
  outline: 2px solid var(--outline-color);
  outline-offset: 2px;
}

input[type='range'] {
  /* style setting variables */
  --track-height: 1ex;
  --track-fill: 20%;
  --thumb-size: 4ex;
  --thumb-offset: -1.5ex;

  appearance: none; /* clear styles, make way for mine */
  display: block;
  inline-size: 100%; /* fill container */
  margin: 1.5ex 0; /* ensure thumb isn't colliding with sibling content */
  background: transparent; /* bg is in the track */
  outline-offset: 8px; /* focus styles have space */
}

input[type='range']::-webkit-slider-runnable-track {
  appearance: none; /* clear styles, make way for mine */
  block-size: var(--track-height);
  border-radius: 5ex;
  background:
      /* hard stop gradient:
          - half transparent (where colorful fill we be)
          - half dark track fill
          - 1st background image is on top
      */
    linear-gradient(to right, transparent var(--track-fill), var(--black) 0%),
    /* colorful fill effect, behind track surface fill */ var(--accent) fixed;
}

input[type='range']::-webkit-slider-thumb {
  appearance: none; /* clear styles, make way for mine */
  cursor: ew-resize; /* cursor style to support drag direction */
  border: 2px solid var(--accent);
  block-size: var(--thumb-size);
  inline-size: var(--thumb-size);
  margin-top: var(--thumb-offset);
  border-radius: 50%;
  background: var(--black) fixed;
  box-shadow: 0 0 0 var(--thumb-highlight-size, 0px)
    var(--thumb-highlight-color, transparent);
}

input[type='range']:hover::-webkit-slider-thumb {
  background: var(--input-hover) fixed;
}

input[type='range']:active::-webkit-slider-thumb {
  background: var(--input-pressed) fixed;
}

#generate-btn {
  margin-top: 1.5rem;
  padding: 0.75rem 1.5rem;
  min-height: 3rem;
  width: 100%;
  background-color: var(--accent);
  color: var(--black);
  font-size: 1.125rem;
  font-weight: 700;
  cursor: pointer;

  &:hover {
    background-color: var(--accent-hover);
  }

  &:active {
    background-color: var(--accent-pressed);
  }
}

.password-strength-wrap {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background-color: var(--black);
  margin-top: 1.5rem;
}

.strength-meter {
  display: flex;
  gap: 0.5rem;
}

.strength-bar {
  width: 6px;
  height: 100%;
  box-shadow: 0px 0px 0px 1px var(--text-muted);
}

.strength-meter--weak .strength-bar.is-filled {
  background-color: var(--tomato);
  box-shadow: 0px 0px 0px 1px var(--tomato);
}

.strength-meter--medium .strength-bar.is-filled {
  background-color: var(--amber);
  box-shadow: 0px 0px 0px 1px var(--amber);
}

.strength-meter--strong .strength-bar.is-filled {
  background-color: var(--accent-hover);
  box-shadow: 0px 0px 0px 1px var(--accent-hover);
}

.strength-meter-text {
  font-size: 1.25rem;
  text-transform: uppercase;
}

.strength-bar-wrap {
  display: flex;
  justify-content: space-evenly;
  align-items: stretch;
  gap: 0.5rem;
}

.text-muted {
  color: var(--text-muted);
}

.text-center {
  text-align: center;
}

.uppercase {
  text-transform: uppercase;
}

.sr-only {
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  position: absolute;
  overflow: hidden;
}

@media (prefers-reduced-motion: no-preference) {
  input[type='range']::-webkit-slider-thumb {
    transition: box-shadow 0.1s ease;
  }
}

input[type='range']:hover::-webkit-slider-thumb,
input[type='range']:active::-webkit-slider-thumb {
  --thumb-highlight-size: 6px;
  --thumb-highlight-color: color-mix(in srgb, transparent 70%, var(--accent));
}

/* Firefox support for range input */
input[type='range']::-moz-range-track {
  height: var(--track-height);
  background:
    linear-gradient(to right, transparent var(--track-fill), var(--black) 0%),
    var(--accent) fixed;
}

input[type='range']::-moz-range-thumb {
  border: 2px solid var(--accent);
  height: var(--thumb-size);
  width: var(--thumb-size);
  border-radius: 50%;
  background: var(--black);
  cursor: ew-resize;
}

input[type='range']:hover::-moz-range-thumb {
  background: var(--input-hover);
}

input[type='range']:active::-moz-range-thumb {
  background: var(--input-pressed);
}

#password {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  white-space: nowrap;
  border: 0;
}

#password-output::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 3rem;
  height: 100%;
  background-color: var(--input-bg);
  pointer-events: none;
  z-index: 1;
}
